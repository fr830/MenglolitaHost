<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpPcap.4.2.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SharpPcapDelegates">
            <summary>包含用于 SharpPcap 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo">
            <summary>SharpPcap.AirPcap.AirPcapChannelInfo 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.#ctor(SharpPcap.AirPcap.AirPcapChannelInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.ExtChannelGet">
            <summary>设置 AirPcapChannelInfo.get_ExtChannel() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.ExtChannelSetSByte">
            <summary>设置 AirPcapChannelInfo.set_ExtChannel(SByte value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.FlagsGet">
            <summary>设置 AirPcapChannelInfo.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.FlagsSetAirPcapChannelInfoFlags">
            <summary>设置 AirPcapChannelInfo.set_Flags(AirPcapChannelInfoFlags value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.FrequencyGet">
            <summary>设置 AirPcapChannelInfo.get_Frequency() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.FrequencySetUInt32">
            <summary>设置 AirPcapChannelInfo.set_Frequency(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.ToString">
            <summary>设置 AirPcapChannelInfo.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.ExtChannelGet">
            <summary>设置 AirPcapChannelInfo.get_ExtChannel() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.ExtChannelSetSByte">
            <summary>设置 AirPcapChannelInfo.set_ExtChannel(SByte value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.FlagsGet">
            <summary>设置 AirPcapChannelInfo.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.FlagsSetAirPcapChannelInfoFlags">
            <summary>设置 AirPcapChannelInfo.set_Flags(AirPcapChannelInfoFlags value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.FrequencyGet">
            <summary>设置 AirPcapChannelInfo.get_Frequency() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.FrequencySetUInt32">
            <summary>设置 AirPcapChannelInfo.set_Frequency(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapChannelInfo.AllInstances.ToString01">
            <summary>设置 AirPcapChannelInfo.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice">
            <summary>SharpPcap.AirPcap.AirPcapDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.#ctor(SharpPcap.AirPcap.AirPcapDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AirPcapDeviceHandleGet">
            <summary>设置 AirPcapDevice.get_AirPcapDeviceHandle() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AirPcapDeviceHandleSetIntPtr">
            <summary>设置 AirPcapDevice.set_AirPcapDeviceHandle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AirPcapLinkTypeGet">
            <summary>设置 AirPcapDevice.get_AirPcapLinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AirPcapLinkTypeSetAirPcapLinkTypes">
            <summary>设置 AirPcapDevice.set_AirPcapLinkType(AirPcapLinkTypes value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.CapabilitiesGet">
            <summary>设置 AirPcapDevice.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.CaptureThread">
            <summary>设置 AirPcapDevice.CaptureThread() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ChannelGet">
            <summary>设置 AirPcapDevice.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ChannelInfoGet">
            <summary>设置 AirPcapDevice.get_ChannelInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ChannelInfoSetAirPcapChannelInfo">
            <summary>设置 AirPcapDevice.set_ChannelInfo(AirPcapChannelInfo value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ChannelSetUInt32">
            <summary>设置 AirPcapDevice.set_Channel(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.Close">
            <summary>设置 AirPcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ConstructorWinPcapDevice">
            <summary>设置 AirPcapDevice.AirPcapDevice(WinPcapDevice dev) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DecryptionStateGet">
            <summary>设置 AirPcapDevice.get_DecryptionState() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DecryptionStateSetAirPcapDecryptionState">
            <summary>设置 AirPcapDevice.set_DecryptionState(AirPcapDecryptionState value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DeviceKeysGet">
            <summary>设置 AirPcapDevice.get_DeviceKeys() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DeviceKeysSetListOfAirPcapKey">
            <summary>设置 AirPcapDevice.set_DeviceKeys(List`1&lt;AirPcapKey&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DriverDecryptionStateGet">
            <summary>设置 AirPcapDevice.get_DriverDecryptionState() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DriverDecryptionStateSetAirPcapDecryptionState">
            <summary>设置 AirPcapDevice.set_DriverDecryptionState(AirPcapDecryptionState value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DriverKeysGet">
            <summary>设置 AirPcapDevice.get_DriverKeys() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.DriverKeysSetListOfAirPcapKey">
            <summary>设置 AirPcapDevice.set_DriverKeys(List`1&lt;AirPcapKey&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FcsPresenceGet">
            <summary>设置 AirPcapDevice.get_FcsPresence() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FcsPresenceSetBoolean">
            <summary>设置 AirPcapDevice.set_FcsPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FcsValidationGet">
            <summary>设置 AirPcapDevice.get_FcsValidation() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FcsValidationSetAirPcapValidationType">
            <summary>设置 AirPcapDevice.set_FcsValidation(AirPcapValidationType value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FrequencyGet">
            <summary>设置 AirPcapDevice.get_Frequency() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.FrequencySetUInt32">
            <summary>设置 AirPcapDevice.set_Frequency(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.GetLastErrorIntPtr">
            <summary>设置 AirPcapDevice.GetLastError(IntPtr AirPcapDeviceHandle) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.IntPtrToKeysIntPtr">
            <summary>设置 AirPcapDevice.IntPtrToKeys(IntPtr pKeysCollection) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.KernelBufferSizeGet">
            <summary>设置 AirPcapDevice.get_KernelBufferSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.KernelBufferSizeSetUInt32">
            <summary>设置 AirPcapDevice.set_KernelBufferSize(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.KeyCollectionSizeInt32">
            <summary>设置 AirPcapDevice.KeyCollectionSize(Int32 keyCount) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.KeysToIntPtrListOfAirPcapKey">
            <summary>设置 AirPcapDevice.KeysToIntPtr(List`1&lt;AirPcapKey&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.LastErrorGet">
            <summary>设置 AirPcapDevice.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.LedCountGet">
            <summary>设置 AirPcapDevice.get_LedCount() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.LedInt32AirPcapDeviceLedState">
            <summary>设置 AirPcapDevice.Led(Int32 ledIndex, LedState newLedState) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.LinkTypeGet">
            <summary>设置 AirPcapDevice.get_LinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.MacAddressGet">
            <summary>设置 AirPcapDevice.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.MacAddressSetPhysicalAddress">
            <summary>设置 AirPcapDevice.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.MacFlagsGet">
            <summary>设置 AirPcapDevice.get_MacFlags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.MacFlagsSetAirPcapMacFlags">
            <summary>设置 AirPcapDevice.set_MacFlags(AirPcapMacFlags value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.MarshalPacketsIntPtrIntPtrListOfRawCaptureOut">
            <summary>设置 AirPcapDevice.MarshalPackets(IntPtr packetsBuffer, IntPtr bufferEnd, List`1&lt;RawCapture&gt;&amp; packets) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.Open">
            <summary>设置 AirPcapDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.OpenDeviceMode">
            <summary>设置 AirPcapDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.OpenDeviceModeInt32">
            <summary>设置 AirPcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.OpenOpenFlagsInt32">
            <summary>设置 AirPcapDevice.Open(OpenFlags flags, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.RoundUpInt64Int32">
            <summary>设置 AirPcapDevice.RoundUp(Int64 num, Int32 multiple) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.StaticConstructor">
            <summary>设置 AirPcapDevice.AirPcapDevice() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.StatisticsGet">
            <summary>设置 AirPcapDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.SupportedChannelsGet">
            <summary>设置 AirPcapDevice.get_SupportedChannels() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.ThrowIfNotOpen">
            <summary>设置 AirPcapDevice.ThrowIfNotOpen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.TimestampGet">
            <summary>设置 AirPcapDevice.get_Timestamp() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.TxPowerGet">
            <summary>设置 AirPcapDevice.get_TxPower() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.TxPowerSetUInt32">
            <summary>设置 AirPcapDevice.set_TxPower(UInt32 value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.AirPcapDeviceHandleGet">
            <summary>设置 AirPcapDevice.get_AirPcapDeviceHandle() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.AirPcapDeviceHandleSetIntPtr">
            <summary>设置 AirPcapDevice.set_AirPcapDeviceHandle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.AirPcapLinkTypeGet">
            <summary>设置 AirPcapDevice.get_AirPcapLinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.AirPcapLinkTypeSetAirPcapLinkTypes">
            <summary>设置 AirPcapDevice.set_AirPcapLinkType(AirPcapLinkTypes value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.CapabilitiesGet">
            <summary>设置 AirPcapDevice.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.CaptureThread">
            <summary>设置 AirPcapDevice.CaptureThread() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.ChannelGet">
            <summary>设置 AirPcapDevice.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.ChannelInfoGet">
            <summary>设置 AirPcapDevice.get_ChannelInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.ChannelInfoSetAirPcapChannelInfo">
            <summary>设置 AirPcapDevice.set_ChannelInfo(AirPcapChannelInfo value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.ChannelSetUInt32">
            <summary>设置 AirPcapDevice.set_Channel(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.Close">
            <summary>设置 AirPcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DecryptionStateGet">
            <summary>设置 AirPcapDevice.get_DecryptionState() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DecryptionStateSetAirPcapDecryptionState">
            <summary>设置 AirPcapDevice.set_DecryptionState(AirPcapDecryptionState value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DeviceKeysGet">
            <summary>设置 AirPcapDevice.get_DeviceKeys() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DeviceKeysSetListOfAirPcapKey">
            <summary>设置 AirPcapDevice.set_DeviceKeys(List`1&lt;AirPcapKey&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DriverDecryptionStateGet">
            <summary>设置 AirPcapDevice.get_DriverDecryptionState() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DriverDecryptionStateSetAirPcapDecryptionState">
            <summary>设置 AirPcapDevice.set_DriverDecryptionState(AirPcapDecryptionState value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DriverKeysGet">
            <summary>设置 AirPcapDevice.get_DriverKeys() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.DriverKeysSetListOfAirPcapKey">
            <summary>设置 AirPcapDevice.set_DriverKeys(List`1&lt;AirPcapKey&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FcsPresenceGet">
            <summary>设置 AirPcapDevice.get_FcsPresence() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FcsPresenceSetBoolean">
            <summary>设置 AirPcapDevice.set_FcsPresence(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FcsValidationGet">
            <summary>设置 AirPcapDevice.get_FcsValidation() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FcsValidationSetAirPcapValidationType">
            <summary>设置 AirPcapDevice.set_FcsValidation(AirPcapValidationType value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FrequencyGet">
            <summary>设置 AirPcapDevice.get_Frequency() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.FrequencySetUInt32">
            <summary>设置 AirPcapDevice.set_Frequency(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.KernelBufferSizeGet">
            <summary>设置 AirPcapDevice.get_KernelBufferSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.KernelBufferSizeSetUInt32">
            <summary>设置 AirPcapDevice.set_KernelBufferSize(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.LastErrorGet">
            <summary>设置 AirPcapDevice.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.LedCountGet">
            <summary>设置 AirPcapDevice.get_LedCount() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.LedInt32AirPcapDeviceLedState">
            <summary>设置 AirPcapDevice.Led(Int32 ledIndex, LedState newLedState) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.LinkTypeGet">
            <summary>设置 AirPcapDevice.get_LinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.MacAddressGet">
            <summary>设置 AirPcapDevice.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.MacAddressSetPhysicalAddress">
            <summary>设置 AirPcapDevice.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.MacFlagsGet">
            <summary>设置 AirPcapDevice.get_MacFlags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.MacFlagsSetAirPcapMacFlags">
            <summary>设置 AirPcapDevice.set_MacFlags(AirPcapMacFlags value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.MarshalPacketsIntPtrIntPtrListOfRawCaptureOut">
            <summary>设置 AirPcapDevice.MarshalPackets(IntPtr packetsBuffer, IntPtr bufferEnd, List`1&lt;RawCapture&gt;&amp; packets) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.Open">
            <summary>设置 AirPcapDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.OpenDeviceMode">
            <summary>设置 AirPcapDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.OpenDeviceModeInt32">
            <summary>设置 AirPcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.OpenOpenFlagsInt32">
            <summary>设置 AirPcapDevice.Open(OpenFlags flags, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.StatisticsGet">
            <summary>设置 AirPcapDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.SupportedChannelsGet">
            <summary>设置 AirPcapDevice.get_SupportedChannels() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.ThrowIfNotOpen">
            <summary>设置 AirPcapDevice.ThrowIfNotOpen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.TimestampGet">
            <summary>设置 AirPcapDevice.get_Timestamp() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.TxPowerGet">
            <summary>设置 AirPcapDevice.get_TxPower() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDevice.AllInstances.TxPowerSetUInt32">
            <summary>设置 AirPcapDevice.set_TxPower(UInt32 value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities">
            <summary>SharpPcap.AirPcap.AirPcapDeviceCapabilities 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.#ctor(SharpPcap.AirPcap.AirPcapDeviceCapabilities)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.CanSetTransmitPowerGet">
            <summary>设置 AirPcapDeviceCapabilities.get_CanSetTransmitPower() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.CanSetTransmitPowerSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_CanSetTransmitPower(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.CanTransmitGet">
            <summary>设置 AirPcapDeviceCapabilities.get_CanTransmit() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.CanTransmitSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_CanTransmit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.ConstructorIntPtr">
            <summary>设置 AirPcapDeviceCapabilities.AirPcapDeviceCapabilities(IntPtr unmanagedCapabilities) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.ExternalAntennaPlugGet">
            <summary>设置 AirPcapDeviceCapabilities.get_ExternalAntennaPlug() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.ExternalAntennaPlugSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_ExternalAntennaPlug(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.ToString">
            <summary>设置 AirPcapDeviceCapabilities.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.CanSetTransmitPowerGet">
            <summary>设置 AirPcapDeviceCapabilities.get_CanSetTransmitPower() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.CanSetTransmitPowerSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_CanSetTransmitPower(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.CanTransmitGet">
            <summary>设置 AirPcapDeviceCapabilities.get_CanTransmit() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.CanTransmitSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_CanTransmit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.ExternalAntennaPlugGet">
            <summary>设置 AirPcapDeviceCapabilities.get_ExternalAntennaPlug() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.ExternalAntennaPlugSetBoolean">
            <summary>设置 AirPcapDeviceCapabilities.set_ExternalAntennaPlug(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceCapabilities.AllInstances.ToString01">
            <summary>设置 AirPcapDeviceCapabilities.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription">
            <summary>SharpPcap.AirPcap.AirPcapDeviceDescription 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.#ctor(SharpPcap.AirPcap.AirPcapDeviceDescription)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.DescriptionGet">
            <summary>设置 AirPcapDeviceDescription.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.DescriptionSetString">
            <summary>设置 AirPcapDeviceDescription.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.NameGet">
            <summary>设置 AirPcapDeviceDescription.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.NameSetString">
            <summary>设置 AirPcapDeviceDescription.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.ToString">
            <summary>设置 AirPcapDeviceDescription.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances.DescriptionGet">
            <summary>设置 AirPcapDeviceDescription.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances.DescriptionSetString">
            <summary>设置 AirPcapDeviceDescription.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances.NameGet">
            <summary>设置 AirPcapDeviceDescription.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances.NameSetString">
            <summary>设置 AirPcapDeviceDescription.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceDescription.AllInstances.ToString01">
            <summary>设置 AirPcapDeviceDescription.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList">
            <summary>SharpPcap.AirPcap.AirPcapDeviceList 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.#ctor(SharpPcap.AirPcap.AirPcapDeviceList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.Generic.ICollection{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.Generic.IEnumerable{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Bind(System.Collections.Generic.IList{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Constructor">
            <summary>设置 AirPcapDeviceList.AirPcapDeviceList() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.GetAirPcapDevices">
            <summary>设置 AirPcapDeviceList.GetAirPcapDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.GetDevices">
            <summary>设置 AirPcapDeviceList.GetDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.InstanceGet">
            <summary>设置 AirPcapDeviceList.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.ItemGetString">
            <summary>设置 AirPcapDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.New">
            <summary>设置 AirPcapDeviceList.New() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.Refresh">
            <summary>设置 AirPcapDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.AllInstances.ItemGetString">
            <summary>设置 AirPcapDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceList.AllInstances.Refresh">
            <summary>设置 AirPcapDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp">
            <summary>SharpPcap.AirPcap.AirPcapDeviceTimestamp 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.#ctor(SharpPcap.AirPcap.AirPcapDeviceTimestamp)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.ToString">
            <summary>设置 AirPcapDeviceTimestamp.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapDeviceTimestamp.AllInstances.ToString01">
            <summary>设置 AirPcapDeviceTimestamp.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapKey">
            <summary>SharpPcap.AirPcap.AirPcapKey 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.#ctor(SharpPcap.AirPcap.AirPcapKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.ConstructorAirPcapKeyTypeByteArray">
            <summary>设置 AirPcapKey.AirPcapKey(AirPcapKeyType Type, Byte[] Data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.ToString">
            <summary>设置 AirPcapKey.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapKey.AllInstances.ToString01">
            <summary>设置 AirPcapKey.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader">
            <summary>SharpPcap.AirPcap.AirPcapPacketHeader 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.#ctor(SharpPcap.AirPcap.AirPcapPacketHeader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.CaplenGet">
            <summary>设置 AirPcapPacketHeader.get_Caplen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.CaplenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Caplen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.ConstructorIntPtr">
            <summary>设置 AirPcapPacketHeader.AirPcapPacketHeader(IntPtr packetHeader) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.HdrlenGet">
            <summary>设置 AirPcapPacketHeader.get_Hdrlen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.HdrlenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Hdrlen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.OriginallenGet">
            <summary>设置 AirPcapPacketHeader.get_Originallen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.OriginallenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Originallen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.ToString">
            <summary>设置 AirPcapPacketHeader.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.TsSecGet">
            <summary>设置 AirPcapPacketHeader.get_TsSec() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.TsSecSetUInt64">
            <summary>设置 AirPcapPacketHeader.set_TsSec(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.TsUsecGet">
            <summary>设置 AirPcapPacketHeader.get_TsUsec() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.TsUsecSetUInt64">
            <summary>设置 AirPcapPacketHeader.set_TsUsec(UInt64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.CaplenGet">
            <summary>设置 AirPcapPacketHeader.get_Caplen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.CaplenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Caplen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.HdrlenGet">
            <summary>设置 AirPcapPacketHeader.get_Hdrlen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.HdrlenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Hdrlen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.OriginallenGet">
            <summary>设置 AirPcapPacketHeader.get_Originallen() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.OriginallenSetInt64">
            <summary>设置 AirPcapPacketHeader.set_Originallen(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.ToString01">
            <summary>设置 AirPcapPacketHeader.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.TsSecGet">
            <summary>设置 AirPcapPacketHeader.get_TsSec() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.TsSecSetUInt64">
            <summary>设置 AirPcapPacketHeader.set_TsSec(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.TsUsecGet">
            <summary>设置 AirPcapPacketHeader.get_TsUsec() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapPacketHeader.AllInstances.TsUsecSetUInt64">
            <summary>设置 AirPcapPacketHeader.set_TsUsec(UInt64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics">
            <summary>SharpPcap.AirPcap.AirPcapStatistics 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.#ctor(SharpPcap.AirPcap.AirPcapStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.Bind(SharpPcap.ICaptureStatistics)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.CapturedPacketsGet">
            <summary>设置 AirPcapStatistics.get_CapturedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.CapturedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_CapturedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.ConstructorIntPtr">
            <summary>设置 AirPcapStatistics.AirPcapStatistics(IntPtr AirPcapDeviceHandle) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.DroppedPacketsGet">
            <summary>设置 AirPcapStatistics.get_DroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.DroppedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_DroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.InterfaceDroppedPacketsGet">
            <summary>设置 AirPcapStatistics.get_InterfaceDroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.InterfaceDroppedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_InterfaceDroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.ReceivedPacketsGet">
            <summary>设置 AirPcapStatistics.get_ReceivedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.ReceivedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_ReceivedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.ToString">
            <summary>设置 AirPcapStatistics.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.CapturedPacketsGet">
            <summary>设置 AirPcapStatistics.get_CapturedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.CapturedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_CapturedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.DroppedPacketsGet">
            <summary>设置 AirPcapStatistics.get_DroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.DroppedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_DroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.InterfaceDroppedPacketsGet">
            <summary>设置 AirPcapStatistics.get_InterfaceDroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.InterfaceDroppedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_InterfaceDroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.ReceivedPacketsGet">
            <summary>设置 AirPcapStatistics.get_ReceivedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.ReceivedPacketsSetUInt32">
            <summary>设置 AirPcapStatistics.set_ReceivedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapStatistics.AllInstances.ToString01">
            <summary>设置 AirPcapStatistics.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion">
            <summary>SharpPcap.AirPcap.AirPcapVersion 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.#ctor(SharpPcap.AirPcap.AirPcapVersion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.Constructor">
            <summary>设置 AirPcapVersion.AirPcapVersion() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.VersionString">
            <summary>设置 AirPcapVersion.VersionString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.VersionUInt32OutUInt32OutUInt32OutUInt32Out">
            <summary>设置 AirPcapVersion.Version(UInt32&amp; Major, UInt32&amp; Minor, UInt32&amp; Rev, UInt32&amp; Build) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.ShimAirPcapVersion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.StubAirPcapKey">
            <summary>SharpPcap.AirPcap.AirPcapKey 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.StubAirPcapKey.#ctor(SharpPcap.AirPcap.AirPcapKeyType,System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.StubAirPcapKey.InitializeStub">
            <summary>初始化 type StubAirPcapKey 的新实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.StubAirPcapKey.ToString">
            <summary>设置 AirPcapKey.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.AirPcap.Fakes.StubAirPcapKey.ToString01">
            <summary>设置 AirPcapKey.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapKey.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapKey.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapKey.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.AirPcap.Fakes.StubAirPcapVersion">
            <summary>SharpPcap.AirPcap.AirPcapVersion 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.StubAirPcapVersion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.AirPcap.Fakes.StubAirPcapVersion.InitializeStub">
            <summary>初始化 type StubAirPcapVersion 的新实例</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapVersion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapVersion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.AirPcap.Fakes.StubAirPcapVersion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimARP">
            <summary>SharpPcap.ARP 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimARP.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimARP.#ctor(SharpPcap.ARP)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimARP.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimARP.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.BuildRequestIPAddressPhysicalAddressIPAddress">
            <summary>设置 ARP.BuildRequest(IPAddress destinationIP, PhysicalAddress localMac, IPAddress localIP) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.ConstructorLibPcapLiveDevice">
            <summary>设置 ARP.ARP(LibPcapLiveDevice device) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.ResolveIPAddress">
            <summary>设置 ARP.Resolve(IPAddress destIP) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.ResolveIPAddressIPAddressPhysicalAddress">
            <summary>设置 ARP.Resolve(IPAddress destIP, IPAddress localIP, PhysicalAddress localMAC) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.TimeoutGet">
            <summary>设置 ARP.get_Timeout() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.TimeoutSetTimeSpan">
            <summary>设置 ARP.set_Timeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimARP.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.AllInstances.BuildRequestIPAddressPhysicalAddressIPAddress">
            <summary>设置 ARP.BuildRequest(IPAddress destinationIP, PhysicalAddress localMac, IPAddress localIP) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.AllInstances.ResolveIPAddress">
            <summary>设置 ARP.Resolve(IPAddress destIP) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.AllInstances.ResolveIPAddressIPAddressPhysicalAddress">
            <summary>设置 ARP.Resolve(IPAddress destIP, IPAddress localIP, PhysicalAddress localMAC) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.AllInstances.TimeoutGet">
            <summary>设置 ARP.get_Timeout() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimARP.AllInstances.TimeoutSetTimeSpan">
            <summary>设置 ARP.set_Timeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimCaptureDeviceList">
            <summary>SharpPcap.CaptureDeviceList 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.#ctor(SharpPcap.CaptureDeviceList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.Generic.ICollection{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.Generic.IEnumerable{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureDeviceList.Bind(System.Collections.Generic.IList{SharpPcap.ICaptureDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.Constructor">
            <summary>设置 CaptureDeviceList.CaptureDeviceList() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.GetDevices">
            <summary>设置 CaptureDeviceList.GetDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.InstanceGet">
            <summary>设置 CaptureDeviceList.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.ItemGetString">
            <summary>设置 CaptureDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.New">
            <summary>设置 CaptureDeviceList.New() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.Refresh">
            <summary>设置 CaptureDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimCaptureDeviceList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.AllInstances.GetDevices">
            <summary>设置 CaptureDeviceList.GetDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.AllInstances.ItemGetString">
            <summary>设置 CaptureDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureDeviceList.AllInstances.Refresh">
            <summary>设置 CaptureDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimCaptureEventArgs">
            <summary>SharpPcap.CaptureEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureEventArgs.#ctor(SharpPcap.CaptureEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimCaptureEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.ConstructorRawCaptureICaptureDevice">
            <summary>设置 CaptureEventArgs.CaptureEventArgs(RawCapture packet, ICaptureDevice device) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.DeviceGet">
            <summary>设置 CaptureEventArgs.get_Device() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.PacketGet">
            <summary>设置 CaptureEventArgs.get_Packet() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimCaptureEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.AllInstances.DeviceGet">
            <summary>设置 CaptureEventArgs.get_Device() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimCaptureEventArgs.AllInstances.PacketGet">
            <summary>设置 CaptureEventArgs.get_Packet() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimDeviceNotReadyException">
            <summary>SharpPcap.DeviceNotReadyException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimDeviceNotReadyException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimDeviceNotReadyException.#ctor(SharpPcap.DeviceNotReadyException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimDeviceNotReadyException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimDeviceNotReadyException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimDeviceNotReadyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimDeviceNotReadyException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimDeviceNotReadyException.Constructor">
            <summary>设置 DeviceNotReadyException.DeviceNotReadyException() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimDeviceNotReadyException.ConstructorString">
            <summary>设置 DeviceNotReadyException.DeviceNotReadyException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimDeviceNotReadyException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException">
            <summary>SharpPcap.InvalidOperationDuringBackgroundCaptureException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.#ctor(SharpPcap.InvalidOperationDuringBackgroundCaptureException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.ConstructorString">
            <summary>设置 InvalidOperationDuringBackgroundCaptureException.InvalidOperationDuringBackgroundCaptureException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimInvalidOperationDuringBackgroundCaptureException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException">
            <summary>SharpPcap.NotSupportedOnCaptureFileException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.#ctor(SharpPcap.NotSupportedOnCaptureFileException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.ConstructorString">
            <summary>设置 NotSupportedOnCaptureFileException.NotSupportedOnCaptureFileException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimNotSupportedOnCaptureFileException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPcap">
            <summary>SharpPcap.Pcap 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcap.#ctor(SharpPcap.Pcap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcap.Constructor">
            <summary>设置 Pcap.Pcap() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcap.StaticConstructor">
            <summary>设置 Pcap.Pcap() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcap.VersionGet">
            <summary>设置 Pcap.get_Version() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcap.isUnix">
            <summary>设置 Pcap.isUnix() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPcap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPcapException">
            <summary>SharpPcap.PcapException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcapException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcapException.#ctor(SharpPcap.PcapException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcapException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcapException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPcapException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcapException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcapException.Constructor">
            <summary>设置 PcapException.PcapException() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPcapException.ConstructorString">
            <summary>设置 PcapException.PcapException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPcapException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPosixTimeval">
            <summary>SharpPcap.PosixTimeval 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPosixTimeval.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPosixTimeval.#ctor(SharpPcap.PosixTimeval)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPosixTimeval.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPosixTimeval.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimPosixTimeval.Bind(System.IComparable{SharpPcap.PosixTimeval})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.CompareToPosixTimeval">
            <summary>设置 PosixTimeval.CompareTo(PosixTimeval that) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.Constructor">
            <summary>设置 PosixTimeval.PosixTimeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.ConstructorUInt64UInt64">
            <summary>设置 PosixTimeval.PosixTimeval(UInt64 Seconds, UInt64 MicroSeconds) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.DateGet">
            <summary>设置 PosixTimeval.get_Date() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.DateTimeToUnixTimeValDateTimeUInt64OutUInt64Out">
            <summary>设置 PosixTimeval.DateTimeToUnixTimeVal(DateTime dateTime, UInt64&amp; tvSec, UInt64&amp; tvUsec) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.EqualityOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_Equality(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.EqualsObject">
            <summary>设置 PosixTimeval.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.GetHashCode">
            <summary>设置 PosixTimeval.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.GreaterThanOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_GreaterThan(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.GreaterThanOrEqualOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_GreaterThanOrEqual(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.InequalityOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_Inequality(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.LessThanOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_LessThan(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.LessThanOrEqualOpPosixTimevalPosixTimeval">
            <summary>设置 PosixTimeval.op_LessThanOrEqual(PosixTimeval a, PosixTimeval b) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.MicroSecondsGet">
            <summary>设置 PosixTimeval.get_MicroSeconds() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.MicroSecondsSetUInt64">
            <summary>设置 PosixTimeval.set_MicroSeconds(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.SecondsGet">
            <summary>设置 PosixTimeval.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.SecondsSetUInt64">
            <summary>设置 PosixTimeval.set_Seconds(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.StaticConstructor">
            <summary>设置 PosixTimeval.PosixTimeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.ToString">
            <summary>设置 PosixTimeval.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.UnixTimeValToDateTimeUInt64UInt64">
            <summary>设置 PosixTimeval.UnixTimeValToDateTime(UInt64 tvSec, UInt64 tvUsec) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimPosixTimeval.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.CompareToPosixTimeval">
            <summary>设置 PosixTimeval.CompareTo(PosixTimeval that) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.DateGet">
            <summary>设置 PosixTimeval.get_Date() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.EqualsObject">
            <summary>设置 PosixTimeval.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.GetHashCode01">
            <summary>设置 PosixTimeval.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.MicroSecondsGet">
            <summary>设置 PosixTimeval.get_MicroSeconds() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.MicroSecondsSetUInt64">
            <summary>设置 PosixTimeval.set_MicroSeconds(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.SecondsGet">
            <summary>设置 PosixTimeval.get_Seconds() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.SecondsSetUInt64">
            <summary>设置 PosixTimeval.set_Seconds(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimPosixTimeval.AllInstances.ToString01">
            <summary>设置 PosixTimeval.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimRawCapture">
            <summary>SharpPcap.RawCapture 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimRawCapture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimRawCapture.#ctor(SharpPcap.RawCapture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimRawCapture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimRawCapture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.ConstructorLinkLayersPosixTimevalByteArray">
            <summary>设置 RawCapture.RawCapture(LinkLayers LinkLayerType, PosixTimeval Timeval, Byte[] Data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.LinkLayerTypeGet">
            <summary>设置 RawCapture.get_LinkLayerType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.LinkLayerTypeSetLinkLayers">
            <summary>设置 RawCapture.set_LinkLayerType(LinkLayers value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.TimevalGet">
            <summary>设置 RawCapture.get_Timeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.TimevalSetPosixTimeval">
            <summary>设置 RawCapture.set_Timeval(PosixTimeval value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.ToString">
            <summary>设置 RawCapture.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimRawCapture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.AllInstances.LinkLayerTypeGet">
            <summary>设置 RawCapture.get_LinkLayerType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.AllInstances.LinkLayerTypeSetLinkLayers">
            <summary>设置 RawCapture.set_LinkLayerType(LinkLayers value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.AllInstances.TimevalGet">
            <summary>设置 RawCapture.get_Timeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.AllInstances.TimevalSetPosixTimeval">
            <summary>设置 RawCapture.set_Timeval(PosixTimeval value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimRawCapture.AllInstances.ToString01">
            <summary>设置 RawCapture.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimStatisticsException">
            <summary>SharpPcap.StatisticsException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimStatisticsException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimStatisticsException.#ctor(SharpPcap.StatisticsException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimStatisticsException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimStatisticsException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimStatisticsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimStatisticsException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimStatisticsException.ConstructorString">
            <summary>设置 StatisticsException.StatisticsException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimStatisticsException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimVersion">
            <summary>SharpPcap.Version 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimVersion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimVersion.#ctor(SharpPcap.Version)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimVersion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimVersion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimVersion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimVersion.Constructor">
            <summary>设置 Version.Version() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimVersion.VersionStringGet">
            <summary>设置 Version.get_VersionString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimVersion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimWinPcapRequiredException">
            <summary>SharpPcap.WinPcapRequiredException 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimWinPcapRequiredException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimWinPcapRequiredException.#ctor(SharpPcap.WinPcapRequiredException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimWinPcapRequiredException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimWinPcapRequiredException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.Fakes.ShimWinPcapRequiredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimWinPcapRequiredException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.ShimWinPcapRequiredException.ConstructorString">
            <summary>设置 WinPcapRequiredException.WinPcapRequiredException(String msg) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.ShimWinPcapRequiredException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubARP">
            <summary>SharpPcap.ARP 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubARP.#ctor(SharpPcap.LibPcap.LibPcapLiveDevice)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubARP.InitializeStub">
            <summary>初始化 type StubARP 的新实例</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubARP.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubARP.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubARP.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubCaptureEventArgs">
            <summary>SharpPcap.CaptureEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubCaptureEventArgs.#ctor(SharpPcap.RawCapture,SharpPcap.ICaptureDevice)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubCaptureEventArgs.InitializeStub">
            <summary>初始化 type StubCaptureEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubCaptureEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubCaptureEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubCaptureEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubICaptureDevice">
            <summary>SharpPcap.ICaptureDevice 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.#ctor">
            <summary>初始化 type StubICaptureDevice 的新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubICaptureDevice.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.AttachBackingFieldToStopCaptureTimeout">
            <summary>附加委托以将 StubICaptureDevice.StopCaptureTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.Capture">
            <summary>设置 ICaptureDevice.Capture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.Close">
            <summary>设置 ICaptureDevice.Close() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.DescriptionGet">
            <summary>设置 ICaptureDevice.get_Description() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.FilterGet">
            <summary>设置 ICaptureDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.FilterSetString">
            <summary>设置 ICaptureDevice.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.GetNextPacket">
            <summary>设置 ICaptureDevice.GetNextPacket() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.GetNextPacketPointersIntPtrRefIntPtrRef">
            <summary>设置 ICaptureDevice.GetNextPacketPointers(IntPtr&amp; header, IntPtr&amp; data) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.LastErrorGet">
            <summary>设置 ICaptureDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.LinkTypeGet">
            <summary>设置 ICaptureDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.MacAddressGet">
            <summary>设置 ICaptureDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.NameGet">
            <summary>设置 ICaptureDevice.get_Name() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.Open">
            <summary>设置 ICaptureDevice.Open() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.OpenDeviceMode">
            <summary>设置 ICaptureDevice.Open(DeviceMode mode) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.OpenDeviceModeInt32">
            <summary>设置 ICaptureDevice.Open(DeviceMode mode, Int32 read_timeout) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.SendPacketByteArray">
            <summary>设置 ICaptureDevice.SendPacket(Byte[] p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.SendPacketByteArrayInt32">
            <summary>设置 ICaptureDevice.SendPacket(Byte[] p, Int32 size) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.SendPacketPacket">
            <summary>设置 ICaptureDevice.SendPacket(Packet p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.SendPacketPacketInt32">
            <summary>设置 ICaptureDevice.SendPacket(Packet p, Int32 size) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Capture">
            <summary>设置 ICaptureDevice.Capture() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Close">
            <summary>设置 ICaptureDevice.Close() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#GetNextPacket">
            <summary>设置 ICaptureDevice.GetNextPacket() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#GetNextPacketPointers(System.IntPtr@,System.IntPtr@)">
            <summary>设置 ICaptureDevice.GetNextPacketPointers(IntPtr&amp; header, IntPtr&amp; data) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Open">
            <summary>设置 ICaptureDevice.Open() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Open(SharpPcap.DeviceMode)">
            <summary>设置 ICaptureDevice.Open(DeviceMode mode) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Open(SharpPcap.DeviceMode,System.Int32)">
            <summary>设置 ICaptureDevice.Open(DeviceMode mode, Int32 read_timeout) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#SendPacket(System.Byte[])">
            <summary>设置 ICaptureDevice.SendPacket(Byte[] p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#SendPacket(PacketDotNet.Packet)">
            <summary>设置 ICaptureDevice.SendPacket(Packet p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#SendPacket(PacketDotNet.Packet,System.Int32)">
            <summary>设置 ICaptureDevice.SendPacket(Packet p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#SendPacket(System.Byte[],System.Int32)">
            <summary>设置 ICaptureDevice.SendPacket(Byte[] p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#StartCapture">
            <summary>设置 ICaptureDevice.StartCapture() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#StopCapture">
            <summary>设置 ICaptureDevice.StopCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StartCapture">
            <summary>设置 ICaptureDevice.StartCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StartedGet">
            <summary>设置 ICaptureDevice.get_Started() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StatisticsGet">
            <summary>设置 ICaptureDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StopCapture">
            <summary>设置 ICaptureDevice.StopCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StopCaptureTimeoutGet">
            <summary>设置 ICaptureDevice.get_StopCaptureTimeout() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureDevice.StopCaptureTimeoutSetTimeSpan">
            <summary>设置 ICaptureDevice.set_StopCaptureTimeout(TimeSpan value) 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Description">
            <summary>设置 ICaptureDevice.get_Description() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Filter">
            <summary>设置 ICaptureDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#LastError">
            <summary>设置 ICaptureDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#LinkType">
            <summary>设置 ICaptureDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#MacAddress">
            <summary>设置 ICaptureDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Name">
            <summary>设置 ICaptureDevice.get_Name() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Started">
            <summary>设置 ICaptureDevice.get_Started() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#Statistics">
            <summary>设置 ICaptureDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureDevice.sp::SharpPcap#ICaptureDevice#StopCaptureTimeout">
            <summary>设置 ICaptureDevice.get_StopCaptureTimeout() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubICaptureStatistics">
            <summary>SharpPcap.ICaptureStatistics 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureStatistics.#ctor">
            <summary>初始化 type StubICaptureStatistics 的新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureStatistics.AttachBackingFieldToDroppedPackets">
            <summary>附加委托以将 StubICaptureStatistics.DroppedPackets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureStatistics.AttachBackingFieldToInterfaceDroppedPackets">
            <summary>附加委托以将 StubICaptureStatistics.InterfaceDroppedPackets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubICaptureStatistics.AttachBackingFieldToReceivedPackets">
            <summary>附加委托以将 StubICaptureStatistics.ReceivedPackets 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.DroppedPacketsGet">
            <summary>设置 ICaptureStatistics.get_DroppedPackets() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.DroppedPacketsSetUInt32">
            <summary>设置 ICaptureStatistics.set_DroppedPackets(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.InterfaceDroppedPacketsGet">
            <summary>设置 ICaptureStatistics.get_InterfaceDroppedPackets() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.InterfaceDroppedPacketsSetUInt32">
            <summary>设置 ICaptureStatistics.set_InterfaceDroppedPackets(UInt32 value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.ReceivedPacketsGet">
            <summary>设置 ICaptureStatistics.get_ReceivedPackets() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubICaptureStatistics.ReceivedPacketsSetUInt32">
            <summary>设置 ICaptureStatistics.set_ReceivedPackets(UInt32 value) 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureStatistics.sp::SharpPcap#ICaptureStatistics#DroppedPackets">
            <summary>设置 ICaptureStatistics.get_DroppedPackets() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureStatistics.sp::SharpPcap#ICaptureStatistics#InterfaceDroppedPackets">
            <summary>设置 ICaptureStatistics.get_InterfaceDroppedPackets() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubICaptureStatistics.sp::SharpPcap#ICaptureStatistics#ReceivedPackets">
            <summary>设置 ICaptureStatistics.get_ReceivedPackets() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException">
            <summary>SharpPcap.InvalidOperationDuringBackgroundCaptureException 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubInvalidOperationDuringBackgroundCaptureException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubInvalidOperationDuringBackgroundCaptureException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.InitializeStub">
            <summary>初始化 type StubInvalidOperationDuringBackgroundCaptureException 的新实例</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubInvalidOperationDuringBackgroundCaptureException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException">
            <summary>SharpPcap.NotSupportedOnCaptureFileException 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubNotSupportedOnCaptureFileException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubNotSupportedOnCaptureFileException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.InitializeStub">
            <summary>初始化 type StubNotSupportedOnCaptureFileException 的新实例</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubNotSupportedOnCaptureFileException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubPcap">
            <summary>SharpPcap.Pcap 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPcap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPcap.InitializeStub">
            <summary>初始化 type StubPcap 的新实例</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPcap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPcap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPcap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubPosixTimeval">
            <summary>SharpPcap.PosixTimeval 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.#ctor(System.UInt64,System.UInt64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.AttachBackingFieldToMicroSeconds">
            <summary>附加委托以将 StubPosixTimeval.MicroSeconds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.AttachBackingFieldToSeconds">
            <summary>附加委托以将 StubPosixTimeval.Seconds 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.DateGet">
            <summary>设置 PosixTimeval.get_Date() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.Equals(System.Object)">
            <summary>设置 PosixTimeval.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.EqualsObject">
            <summary>设置 PosixTimeval.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.GetHashCode">
            <summary>设置 PosixTimeval.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.GetHashCode01">
            <summary>设置 PosixTimeval.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.InitializeStub">
            <summary>初始化 type StubPosixTimeval 的新实例</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.MicroSecondsGet">
            <summary>设置 PosixTimeval.get_MicroSeconds() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.MicroSecondsSetUInt64">
            <summary>设置 PosixTimeval.set_MicroSeconds(UInt64 value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.SecondsGet">
            <summary>设置 PosixTimeval.get_Seconds() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.SecondsSetUInt64">
            <summary>设置 PosixTimeval.set_Seconds(UInt64 value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubPosixTimeval.ToString">
            <summary>设置 PosixTimeval.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubPosixTimeval.ToString01">
            <summary>设置 PosixTimeval.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.Date">
            <summary>设置 PosixTimeval.get_Date() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.MicroSeconds">
            <summary>设置 PosixTimeval.get_MicroSeconds() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubPosixTimeval.Seconds">
            <summary>设置 PosixTimeval.get_Seconds() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubRawCapture">
            <summary>SharpPcap.RawCapture 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubRawCapture.#ctor(PacketDotNet.LinkLayers,SharpPcap.PosixTimeval,System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubRawCapture.InitializeStub">
            <summary>初始化 type StubRawCapture 的新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubRawCapture.ToString">
            <summary>设置 RawCapture.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubRawCapture.ToString01">
            <summary>设置 RawCapture.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubRawCapture.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubRawCapture.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubRawCapture.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubStatisticsException">
            <summary>SharpPcap.StatisticsException 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubStatisticsException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubStatisticsException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.InitializeStub">
            <summary>初始化 type StubStatisticsException 的新实例</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubStatisticsException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubStatisticsException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubStatisticsException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.Fakes.StubWinPcapRequiredException">
            <summary>SharpPcap.WinPcapRequiredException 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubWinPcapRequiredException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubWinPcapRequiredException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.InitializeStub">
            <summary>初始化 type StubWinPcapRequiredException 的新实例</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.Fakes.StubWinPcapRequiredException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.Fakes.StubWinPcapRequiredException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.Fakes.StubWinPcapRequiredException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice">
            <summary>SharpPcap.LibPcap.CaptureFileReaderDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.#ctor(SharpPcap.LibPcap.CaptureFileReaderDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.ConstructorString">
            <summary>设置 CaptureFileReaderDevice.CaptureFileReaderDevice(String captureFilename) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.DescriptionGet">
            <summary>设置 CaptureFileReaderDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.FileNameGet">
            <summary>设置 CaptureFileReaderDevice.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.FileSizeGet">
            <summary>设置 CaptureFileReaderDevice.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.NameGet">
            <summary>设置 CaptureFileReaderDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.Open">
            <summary>设置 CaptureFileReaderDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.StatisticsGet">
            <summary>设置 CaptureFileReaderDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.DescriptionGet">
            <summary>设置 CaptureFileReaderDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.FileNameGet">
            <summary>设置 CaptureFileReaderDevice.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.FileSizeGet">
            <summary>设置 CaptureFileReaderDevice.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.NameGet">
            <summary>设置 CaptureFileReaderDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.Open">
            <summary>设置 CaptureFileReaderDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileReaderDevice.AllInstances.StatisticsGet">
            <summary>设置 CaptureFileReaderDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice">
            <summary>SharpPcap.LibPcap.CaptureFileWriterDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.#ctor(SharpPcap.LibPcap.CaptureFileWriterDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.Close">
            <summary>设置 CaptureFileWriterDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.ConstructorLibPcapLiveDeviceString">
            <summary>设置 CaptureFileWriterDevice.CaptureFileWriterDevice(LibPcapLiveDevice device, String captureFilename) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.ConstructorLibPcapLiveDeviceStringFileMode">
            <summary>设置 CaptureFileWriterDevice.CaptureFileWriterDevice(LibPcapLiveDevice device, String captureFilename, FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.ConstructorLinkLayersNullableOfInt32StringFileMode">
            <summary>设置 CaptureFileWriterDevice.CaptureFileWriterDevice(LinkLayers linkLayerType, Nullable`1&lt;Int32&gt; snapshotLength, String captureFilename, FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.ConstructorString">
            <summary>设置 CaptureFileWriterDevice.CaptureFileWriterDevice(String captureFilename) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.ConstructorStringFileMode">
            <summary>设置 CaptureFileWriterDevice.CaptureFileWriterDevice(String captureFilename, FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.DescriptionGet">
            <summary>设置 CaptureFileWriterDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.DumpOpenedGet">
            <summary>设置 CaptureFileWriterDevice.get_DumpOpened() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.NameGet">
            <summary>设置 CaptureFileWriterDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.Open">
            <summary>设置 CaptureFileWriterDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.StatisticsGet">
            <summary>设置 CaptureFileWriterDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.WriteByteArray">
            <summary>设置 CaptureFileWriterDevice.Write(Byte[] p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.WriteByteArrayPcapHeader">
            <summary>设置 CaptureFileWriterDevice.Write(Byte[] p, PcapHeader h) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.WriteRawCapture">
            <summary>设置 CaptureFileWriterDevice.Write(RawCapture p) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.Close">
            <summary>设置 CaptureFileWriterDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.DescriptionGet">
            <summary>设置 CaptureFileWriterDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.DumpOpenedGet">
            <summary>设置 CaptureFileWriterDevice.get_DumpOpened() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.NameGet">
            <summary>设置 CaptureFileWriterDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.Open">
            <summary>设置 CaptureFileWriterDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.StatisticsGet">
            <summary>设置 CaptureFileWriterDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.WriteByteArray">
            <summary>设置 CaptureFileWriterDevice.Write(Byte[] p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.WriteByteArrayPcapHeader">
            <summary>设置 CaptureFileWriterDevice.Write(Byte[] p, PcapHeader h) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimCaptureFileWriterDevice.AllInstances.WriteRawCapture">
            <summary>设置 CaptureFileWriterDevice.Write(RawCapture p) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice">
            <summary>SharpPcap.LibPcap.LibPcapLiveDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.#ctor(SharpPcap.LibPcap.LibPcapLiveDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AddressesGet">
            <summary>设置 LibPcapLiveDevice.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.Constructor">
            <summary>设置 LibPcapLiveDevice.LibPcapLiveDevice() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.ConstructorPcapInterface">
            <summary>设置 LibPcapLiveDevice.LibPcapLiveDevice(PcapInterface pcapIf) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.DescriptionGet">
            <summary>设置 LibPcapLiveDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.FlagsGet">
            <summary>设置 LibPcapLiveDevice.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.LoopbackGet">
            <summary>设置 LibPcapLiveDevice.get_Loopback() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.NameGet">
            <summary>设置 LibPcapLiveDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.NonBlockingModeGet">
            <summary>设置 LibPcapLiveDevice.get_NonBlockingMode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.NonBlockingModeSetBoolean">
            <summary>设置 LibPcapLiveDevice.set_NonBlockingMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.Open">
            <summary>设置 LibPcapLiveDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.OpenDeviceMode">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.OpenDeviceModeInt32">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.SendPacketByteArrayInt32">
            <summary>设置 LibPcapLiveDevice.SendPacket(Byte[] p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.StatisticsGet">
            <summary>设置 LibPcapLiveDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.AddressesGet">
            <summary>设置 LibPcapLiveDevice.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.DescriptionGet">
            <summary>设置 LibPcapLiveDevice.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.FlagsGet">
            <summary>设置 LibPcapLiveDevice.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.LoopbackGet">
            <summary>设置 LibPcapLiveDevice.get_Loopback() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.NameGet">
            <summary>设置 LibPcapLiveDevice.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.NonBlockingModeGet">
            <summary>设置 LibPcapLiveDevice.get_NonBlockingMode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.NonBlockingModeSetBoolean">
            <summary>设置 LibPcapLiveDevice.set_NonBlockingMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.Open">
            <summary>设置 LibPcapLiveDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.OpenDeviceMode">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.OpenDeviceModeInt32">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.SendPacketByteArrayInt32">
            <summary>设置 LibPcapLiveDevice.SendPacket(Byte[] p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDevice.AllInstances.StatisticsGet">
            <summary>设置 LibPcapLiveDevice.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList">
            <summary>SharpPcap.LibPcap.LibPcapLiveDeviceList 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.#ctor(SharpPcap.LibPcap.LibPcapLiveDeviceList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.Generic.ICollection{SharpPcap.LibPcap.LibPcapLiveDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.Generic.IEnumerable{SharpPcap.LibPcap.LibPcapLiveDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Bind(System.Collections.Generic.IList{SharpPcap.LibPcap.LibPcapLiveDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Constructor">
            <summary>设置 LibPcapLiveDeviceList.LibPcapLiveDeviceList() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.GetDevices">
            <summary>设置 LibPcapLiveDeviceList.GetDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.InstanceGet">
            <summary>设置 LibPcapLiveDeviceList.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.ItemGetString">
            <summary>设置 LibPcapLiveDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.New">
            <summary>设置 LibPcapLiveDeviceList.New() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.Refresh">
            <summary>设置 LibPcapLiveDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.AllInstances.ItemGetString">
            <summary>设置 LibPcapLiveDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimLibPcapLiveDeviceList.AllInstances.Refresh">
            <summary>设置 LibPcapLiveDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapAddress">
            <summary>SharpPcap.LibPcap.PcapAddress 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapAddress.#ctor(SharpPcap.LibPcap.PcapAddress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AddrGet">
            <summary>设置 PcapAddress.get_Addr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AddrSetSockaddr">
            <summary>设置 PcapAddress.set_Addr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.BroadaddrGet">
            <summary>设置 PcapAddress.get_Broadaddr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.BroadaddrSetSockaddr">
            <summary>设置 PcapAddress.set_Broadaddr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.Constructor">
            <summary>设置 PcapAddress.PcapAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.DstaddrGet">
            <summary>设置 PcapAddress.get_Dstaddr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.DstaddrSetSockaddr">
            <summary>设置 PcapAddress.set_Dstaddr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.NetmaskGet">
            <summary>设置 PcapAddress.get_Netmask() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.NetmaskSetSockaddr">
            <summary>设置 PcapAddress.set_Netmask(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.ToString">
            <summary>设置 PcapAddress.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.AddrGet">
            <summary>设置 PcapAddress.get_Addr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.AddrSetSockaddr">
            <summary>设置 PcapAddress.set_Addr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.BroadaddrGet">
            <summary>设置 PcapAddress.get_Broadaddr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.BroadaddrSetSockaddr">
            <summary>设置 PcapAddress.set_Broadaddr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.DstaddrGet">
            <summary>设置 PcapAddress.get_Dstaddr() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.DstaddrSetSockaddr">
            <summary>设置 PcapAddress.set_Dstaddr(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.NetmaskGet">
            <summary>设置 PcapAddress.get_Netmask() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.NetmaskSetSockaddr">
            <summary>设置 PcapAddress.set_Netmask(Sockaddr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapAddress.AllInstances.ToString01">
            <summary>设置 PcapAddress.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapDevice">
            <summary>SharpPcap.LibPcap.PcapDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapDevice.#ctor(SharpPcap.LibPcap.PcapDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.Capture">
            <summary>设置 PcapDevice.Capture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.CaptureInt32">
            <summary>设置 PcapDevice.Capture(Int32 packetCount) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.CheckFilterStringStringOut">
            <summary>设置 PcapDevice.CheckFilter(String filterExpression, String&amp; errorString) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.Close">
            <summary>设置 PcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.CompileFilterIntPtrStringUInt32IntPtrOutStringOut">
            <summary>设置 PcapDevice.CompileFilter(IntPtr pcapHandle, String filterExpression, UInt32 mask, IntPtr&amp; bpfProgram, String&amp; errorString) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.Constructor">
            <summary>设置 PcapDevice.PcapDevice() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.FreeBpfProgramIntPtr">
            <summary>设置 PcapDevice.FreeBpfProgram(IntPtr bpfProgram) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.GetLastErrorIntPtr">
            <summary>设置 PcapDevice.GetLastError(IntPtr deviceHandle) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.GetNextPacketPointersIntPtrRefIntPtrRef">
            <summary>设置 PcapDevice.GetNextPacketPointers(IntPtr&amp; header, IntPtr&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.InterfaceGet">
            <summary>设置 PcapDevice.get_Interface() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.IsOnPacketArrivalNullGet">
            <summary>设置 PcapDevice.get_IsOnPacketArrivalNull() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OnCaptureStoppedAddCaptureStoppedEventHandler">
            <summary>设置 PcapDevice.add_OnCaptureStopped(CaptureStoppedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OnCaptureStoppedRemoveCaptureStoppedEventHandler">
            <summary>设置 PcapDevice.remove_OnCaptureStopped(CaptureStoppedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OnPacketArrivalAddPacketArrivalEventHandler">
            <summary>设置 PcapDevice.add_OnPacketArrival(PacketArrivalEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OnPacketArrivalRemovePacketArrivalEventHandler">
            <summary>设置 PcapDevice.remove_OnPacketArrival(PacketArrivalEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OpenDeviceMode">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OpenDeviceModeInt32">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.PcapHandleGet">
            <summary>设置 PcapDevice.get_PcapHandle() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.PcapHandleSetIntPtr">
            <summary>设置 PcapDevice.set_PcapHandle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendCaptureStoppedEventCaptureStoppedEventStatus">
            <summary>设置 PcapDevice.SendCaptureStoppedEvent(CaptureStoppedEventStatus status) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendPacketByteArrayInt32">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.SetFilterString">
            <summary>设置 PcapDevice.SetFilter(String filterExpression) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StaticConstructor">
            <summary>设置 PcapDevice.PcapDevice() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StopCaptureTimeoutGet">
            <summary>设置 PcapDevice.get_StopCaptureTimeout() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.StopCaptureTimeoutSetTimeSpan">
            <summary>设置 PcapDevice.set_StopCaptureTimeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.ThrowIfNotOpenString">
            <summary>设置 PcapDevice.ThrowIfNotOpen(String ExceptionString) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.ToString">
            <summary>设置 PcapDevice.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.UnixSetupMonoUnixNative">
            <summary>设置 PcapDevice.UnixSetupMonoUnixNative() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.Capture">
            <summary>设置 PcapDevice.Capture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.CaptureInt32">
            <summary>设置 PcapDevice.Capture(Int32 packetCount) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.Close">
            <summary>设置 PcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.GetNextPacketPointersIntPtrRefIntPtrRef">
            <summary>设置 PcapDevice.GetNextPacketPointers(IntPtr&amp; header, IntPtr&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.InterfaceGet">
            <summary>设置 PcapDevice.get_Interface() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.IsOnPacketArrivalNullGet">
            <summary>设置 PcapDevice.get_IsOnPacketArrivalNull() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OnCaptureStoppedAddCaptureStoppedEventHandler">
            <summary>设置 PcapDevice.add_OnCaptureStopped(CaptureStoppedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OnCaptureStoppedRemoveCaptureStoppedEventHandler">
            <summary>设置 PcapDevice.remove_OnCaptureStopped(CaptureStoppedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OnPacketArrivalAddPacketArrivalEventHandler">
            <summary>设置 PcapDevice.add_OnPacketArrival(PacketArrivalEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OnPacketArrivalRemovePacketArrivalEventHandler">
            <summary>设置 PcapDevice.remove_OnPacketArrival(PacketArrivalEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OpenDeviceMode">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OpenDeviceModeInt32">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.PcapHandleGet">
            <summary>设置 PcapDevice.get_PcapHandle() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.PcapHandleSetIntPtr">
            <summary>设置 PcapDevice.set_PcapHandle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendCaptureStoppedEventCaptureStoppedEventStatus">
            <summary>设置 PcapDevice.SendCaptureStoppedEvent(CaptureStoppedEventStatus status) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendPacketByteArrayInt32">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.SetFilterString">
            <summary>设置 PcapDevice.SetFilter(String filterExpression) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.StopCaptureTimeoutGet">
            <summary>设置 PcapDevice.get_StopCaptureTimeout() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.StopCaptureTimeoutSetTimeSpan">
            <summary>设置 PcapDevice.set_StopCaptureTimeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.ThrowIfNotOpenString">
            <summary>设置 PcapDevice.ThrowIfNotOpen(String ExceptionString) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapDevice.AllInstances.ToString01">
            <summary>设置 PcapDevice.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapHeader">
            <summary>SharpPcap.LibPcap.PcapHeader 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapHeader.FromPointerIntPtr">
            <summary>设置 PcapHeader.FromPointer(IntPtr pcap_pkthdr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapHeader.StaticConstructor">
            <summary>设置 PcapHeader.PcapHeader() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapInterface">
            <summary>SharpPcap.LibPcap.PcapInterface 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapInterface.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapInterface.#ctor(SharpPcap.LibPcap.PcapInterface)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapInterface.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapInterface.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AddressesGet">
            <summary>设置 PcapInterface.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AddressesSetListOfPcapAddress">
            <summary>设置 PcapInterface.set_Addresses(List`1&lt;PcapAddress&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.DescriptionGet">
            <summary>设置 PcapInterface.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.DescriptionSetString">
            <summary>设置 PcapInterface.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.FlagsGet">
            <summary>设置 PcapInterface.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.FlagsSetUInt32">
            <summary>设置 PcapInterface.set_Flags(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.FriendlyNameGet">
            <summary>设置 PcapInterface.get_FriendlyName() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.FriendlyNameSetString">
            <summary>设置 PcapInterface.set_FriendlyName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.GatewayAddressGet">
            <summary>设置 PcapInterface.get_GatewayAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.GatewayAddressSetIPAddress">
            <summary>设置 PcapInterface.set_GatewayAddress(IPAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.MacAddressGet">
            <summary>设置 PcapInterface.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.MacAddressSetPhysicalAddress">
            <summary>设置 PcapInterface.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.NameGet">
            <summary>设置 PcapInterface.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.NameSetString">
            <summary>设置 PcapInterface.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.ToString">
            <summary>设置 PcapInterface.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.AddressesGet">
            <summary>设置 PcapInterface.get_Addresses() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.AddressesSetListOfPcapAddress">
            <summary>设置 PcapInterface.set_Addresses(List`1&lt;PcapAddress&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.DescriptionGet">
            <summary>设置 PcapInterface.get_Description() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.DescriptionSetString">
            <summary>设置 PcapInterface.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.FlagsGet">
            <summary>设置 PcapInterface.get_Flags() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.FlagsSetUInt32">
            <summary>设置 PcapInterface.set_Flags(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.FriendlyNameGet">
            <summary>设置 PcapInterface.get_FriendlyName() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.FriendlyNameSetString">
            <summary>设置 PcapInterface.set_FriendlyName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.GatewayAddressGet">
            <summary>设置 PcapInterface.get_GatewayAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.GatewayAddressSetIPAddress">
            <summary>设置 PcapInterface.set_GatewayAddress(IPAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.MacAddressGet">
            <summary>设置 PcapInterface.get_MacAddress() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.MacAddressSetPhysicalAddress">
            <summary>设置 PcapInterface.set_MacAddress(PhysicalAddress value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.NameGet">
            <summary>设置 PcapInterface.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.NameSetString">
            <summary>设置 PcapInterface.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapInterface.AllInstances.ToString01">
            <summary>设置 PcapInterface.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapStatistics">
            <summary>SharpPcap.LibPcap.PcapStatistics 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.#ctor(SharpPcap.LibPcap.PcapStatistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.Bind(SharpPcap.ICaptureStatistics)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.Constructor">
            <summary>设置 PcapStatistics.PcapStatistics() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.ConstructorIntPtr">
            <summary>设置 PcapStatistics.PcapStatistics(IntPtr pcap_t) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.DroppedPacketsGet">
            <summary>设置 PcapStatistics.get_DroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.DroppedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_DroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.InterfaceDroppedPacketsGet">
            <summary>设置 PcapStatistics.get_InterfaceDroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.InterfaceDroppedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_InterfaceDroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.ReceivedPacketsGet">
            <summary>设置 PcapStatistics.get_ReceivedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.ReceivedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_ReceivedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.ToString">
            <summary>设置 PcapStatistics.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.DroppedPacketsGet">
            <summary>设置 PcapStatistics.get_DroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.DroppedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_DroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.InterfaceDroppedPacketsGet">
            <summary>设置 PcapStatistics.get_InterfaceDroppedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.InterfaceDroppedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_InterfaceDroppedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.ReceivedPacketsGet">
            <summary>设置 PcapStatistics.get_ReceivedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.ReceivedPacketsSetUInt32">
            <summary>设置 PcapStatistics.set_ReceivedPackets(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimPcapStatistics.AllInstances.ToString01">
            <summary>设置 PcapStatistics.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimSockaddr">
            <summary>SharpPcap.LibPcap.Sockaddr 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimSockaddr.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimSockaddr.#ctor(SharpPcap.LibPcap.Sockaddr)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimSockaddr.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.ShimSockaddr.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.ConstructorIntPtr">
            <summary>设置 Sockaddr.Sockaddr(IntPtr sockaddrPtr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.ConstructorPhysicalAddress">
            <summary>设置 Sockaddr.Sockaddr(PhysicalAddress hardwareAddress) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.ToString">
            <summary>设置 Sockaddr.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.sa_familyGet">
            <summary>设置 Sockaddr.get_sa_family() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.ShimSockaddr.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.AllInstances.ToString01">
            <summary>设置 Sockaddr.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.ShimSockaddr.AllInstances.sa_familyGet">
            <summary>设置 Sockaddr.get_sa_family() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice">
            <summary>SharpPcap.LibPcap.CaptureFileReaderDevice 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubCaptureFileReaderDevice.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.AttachBackingFieldToMacAddress">
            <summary>附加委托以将 StubCaptureFileReaderDevice.MacAddress 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.CaptureThread01">
            <summary>设置 PcapDevice.CaptureThread() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Close">
            <summary>设置 PcapDevice.Close() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Close01">
            <summary>设置 PcapDevice.Close() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.DescriptionGet">
            <summary>设置 CaptureFileReaderDevice.get_Description() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.GetNextPacket(SharpPcap.RawCapture@)">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.GetNextPacket01">
            <summary>设置 PcapDevice.GetNextPacket() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.InitializeStub">
            <summary>初始化 type StubCaptureFileReaderDevice 的新实例</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.MarshalRawPacket(System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.NameGet">
            <summary>设置 CaptureFileReaderDevice.get_Name() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Open">
            <summary>设置 CaptureFileReaderDevice.Open() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Open(SharpPcap.DeviceMode)">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Open(SharpPcap.DeviceMode,System.Int32)">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Open01">
            <summary>设置 CaptureFileReaderDevice.Open() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.OpenDeviceMode">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.OpenDeviceModeInt32">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.PacketHandler(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacket(System.Byte[])">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacket(PacketDotNet.Packet)">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacket(PacketDotNet.Packet,System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacket(System.Byte[],System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketArrivalEvent(SharpPcap.RawCapture)">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketByteArrayInt32">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StartCapture01">
            <summary>设置 PcapDevice.StartCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StatisticsGet">
            <summary>设置 CaptureFileReaderDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.StopCapture01">
            <summary>设置 PcapDevice.StopCapture() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.ToString">
            <summary>设置 PcapDevice.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.ToString01">
            <summary>设置 PcapDevice.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Description">
            <summary>设置 CaptureFileReaderDevice.get_Description() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Filter">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.LastError">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.LinkType">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.MacAddress">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Name">
            <summary>设置 CaptureFileReaderDevice.get_Name() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Opened">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Started">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileReaderDevice.Statistics">
            <summary>设置 CaptureFileReaderDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice">
            <summary>SharpPcap.LibPcap.CaptureFileWriterDevice 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.#ctor(SharpPcap.LibPcap.LibPcapLiveDevice,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.#ctor(System.String,System.IO.FileMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.#ctor(SharpPcap.LibPcap.LibPcapLiveDevice,System.String,System.IO.FileMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.#ctor(PacketDotNet.LinkLayers,System.Nullable{System.Int32},System.String,System.IO.FileMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubCaptureFileWriterDevice.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.AttachBackingFieldToMacAddress">
            <summary>附加委托以将 StubCaptureFileWriterDevice.MacAddress 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.CaptureThread01">
            <summary>设置 PcapDevice.CaptureThread() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Close">
            <summary>设置 CaptureFileWriterDevice.Close() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Close01">
            <summary>设置 CaptureFileWriterDevice.Close() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.DescriptionGet">
            <summary>设置 CaptureFileWriterDevice.get_Description() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.GetNextPacket(SharpPcap.RawCapture@)">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.GetNextPacket01">
            <summary>设置 PcapDevice.GetNextPacket() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.InitializeStub">
            <summary>初始化 type StubCaptureFileWriterDevice 的新实例</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.MarshalRawPacket(System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.NameGet">
            <summary>设置 CaptureFileWriterDevice.get_Name() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Open">
            <summary>设置 CaptureFileWriterDevice.Open() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Open(SharpPcap.DeviceMode)">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Open(SharpPcap.DeviceMode,System.Int32)">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Open01">
            <summary>设置 CaptureFileWriterDevice.Open() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.OpenDeviceMode">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.OpenDeviceModeInt32">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.PacketHandler(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacket(PacketDotNet.Packet)">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacket(System.Byte[])">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacket(System.Byte[],System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacket(PacketDotNet.Packet,System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketArrivalEvent(SharpPcap.RawCapture)">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketByteArrayInt32">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StartCapture01">
            <summary>设置 PcapDevice.StartCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StatisticsGet">
            <summary>设置 CaptureFileWriterDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.StopCapture01">
            <summary>设置 PcapDevice.StopCapture() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.ToString">
            <summary>设置 PcapDevice.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.ToString01">
            <summary>设置 PcapDevice.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Description">
            <summary>设置 CaptureFileWriterDevice.get_Description() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Filter">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.LastError">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.LinkType">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.MacAddress">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Name">
            <summary>设置 CaptureFileWriterDevice.get_Name() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Opened">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Started">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubCaptureFileWriterDevice.Statistics">
            <summary>设置 CaptureFileWriterDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice">
            <summary>SharpPcap.LibPcap.LibPcapLiveDevice 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.AddressesGet">
            <summary>设置 LibPcapLiveDevice.get_Addresses() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubLibPcapLiveDevice.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.AttachBackingFieldToMacAddress">
            <summary>附加委托以将 StubLibPcapLiveDevice.MacAddress 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.CaptureThread01">
            <summary>设置 PcapDevice.CaptureThread() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Close">
            <summary>设置 PcapDevice.Close() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Close01">
            <summary>设置 PcapDevice.Close() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.DescriptionGet">
            <summary>设置 LibPcapLiveDevice.get_Description() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.FlagsGet">
            <summary>设置 LibPcapLiveDevice.get_Flags() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.GetNextPacket(SharpPcap.RawCapture@)">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.GetNextPacket01">
            <summary>设置 PcapDevice.GetNextPacket() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.InitializeStub">
            <summary>初始化 type StubLibPcapLiveDevice 的新实例</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.LoopbackGet">
            <summary>设置 LibPcapLiveDevice.get_Loopback() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.MarshalRawPacket(System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.NameGet">
            <summary>设置 LibPcapLiveDevice.get_Name() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Open">
            <summary>设置 LibPcapLiveDevice.Open() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Open(SharpPcap.DeviceMode)">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Open(SharpPcap.DeviceMode,System.Int32)">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode, Int32 read_timeout) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Open01">
            <summary>设置 LibPcapLiveDevice.Open() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.OpenDeviceMode">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.OpenDeviceModeInt32">
            <summary>设置 LibPcapLiveDevice.Open(DeviceMode mode, Int32 read_timeout) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.PacketHandler(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacket(System.Byte[])">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacket(PacketDotNet.Packet)">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacket(PacketDotNet.Packet,System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacket(System.Byte[],System.Int32)">
            <summary>设置 LibPcapLiveDevice.SendPacket(Byte[] p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketArrivalEvent(SharpPcap.RawCapture)">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketByteArrayInt32">
            <summary>设置 LibPcapLiveDevice.SendPacket(Byte[] p, Int32 size) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StartCapture01">
            <summary>设置 PcapDevice.StartCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StatisticsGet">
            <summary>设置 LibPcapLiveDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.StopCapture01">
            <summary>设置 PcapDevice.StopCapture() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.ToString">
            <summary>设置 PcapDevice.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.ToString01">
            <summary>设置 PcapDevice.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Addresses">
            <summary>设置 LibPcapLiveDevice.get_Addresses() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Description">
            <summary>设置 LibPcapLiveDevice.get_Description() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Filter">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Flags">
            <summary>设置 LibPcapLiveDevice.get_Flags() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.LastError">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.LinkType">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Loopback">
            <summary>设置 LibPcapLiveDevice.get_Loopback() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.MacAddress">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Name">
            <summary>设置 LibPcapLiveDevice.get_Name() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Opened">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Started">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubLibPcapLiveDevice.Statistics">
            <summary>设置 LibPcapLiveDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.StubPcapDevice">
            <summary>SharpPcap.LibPcap.PcapDevice 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubPcapDevice.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.AttachBackingFieldToMacAddress">
            <summary>附加委托以将 StubPcapDevice.MacAddress 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.CaptureThread">
            <summary>设置 PcapDevice.CaptureThread() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.CaptureThread01">
            <summary>设置 PcapDevice.CaptureThread() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.Close">
            <summary>设置 PcapDevice.Close() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.Close01">
            <summary>设置 PcapDevice.Close() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.DescriptionGet">
            <summary>设置 PcapDevice.get_Description() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.FilterGet">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.FilterSetString">
            <summary>设置 PcapDevice.set_Filter(String value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.GetNextPacket">
            <summary>设置 PcapDevice.GetNextPacket() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.GetNextPacket(SharpPcap.RawCapture@)">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.GetNextPacket01">
            <summary>设置 PcapDevice.GetNextPacket() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.GetNextPacketRawCaptureOut">
            <summary>设置 PcapDevice.GetNextPacket(RawCapture&amp; p) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.InitializeStub">
            <summary>初始化 type StubPcapDevice 的新实例</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.LastErrorGet">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.LinkTypeGet">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.MacAddressGet">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.MacAddressSetPhysicalAddress">
            <summary>设置 PcapDevice.set_MacAddress(PhysicalAddress value) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.MarshalRawPacket(System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.MarshalRawPacketIntPtrIntPtr">
            <summary>设置 PcapDevice.MarshalRawPacket(IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.NameGet">
            <summary>设置 PcapDevice.get_Name() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.Open">
            <summary>设置 PcapDevice.Open() 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.Open(SharpPcap.DeviceMode)">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.Open(SharpPcap.DeviceMode,System.Int32)">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.Open01">
            <summary>设置 PcapDevice.Open() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.OpenDeviceMode">
            <summary>设置 PcapDevice.Open(DeviceMode mode) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.OpenDeviceModeInt32">
            <summary>设置 PcapDevice.Open(DeviceMode mode, Int32 read_timeout) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.OpenedGet">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.PacketHandler(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.PacketHandlerIntPtrIntPtrIntPtr">
            <summary>设置 PcapDevice.PacketHandler(IntPtr param, IntPtr header, IntPtr data) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacket(PacketDotNet.Packet)">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacket(System.Byte[])">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacket(System.Byte[],System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacket(PacketDotNet.Packet,System.Int32)">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 存根</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketArrivalEvent(SharpPcap.RawCapture)">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 PcapDevice.SendPacketArrivalEvent(RawCapture p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketByteArray">
            <summary>设置 PcapDevice.SendPacket(Byte[] p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketByteArrayInt32">
            <summary>设置 PcapDevice.SendPacket(Byte[] p, Int32 size) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketPacket">
            <summary>设置 PcapDevice.SendPacket(Packet p) 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.SendPacketPacketInt32">
            <summary>设置 PcapDevice.SendPacket(Packet p, Int32 size) 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.StartCapture">
            <summary>设置 PcapDevice.StartCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.StartCapture01">
            <summary>设置 PcapDevice.StartCapture() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.StartedGet">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.StatisticsGet">
            <summary>设置 PcapDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.StopCapture">
            <summary>设置 PcapDevice.StopCapture() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.StopCapture01">
            <summary>设置 PcapDevice.StopCapture() 的 stub</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubPcapDevice.ToString">
            <summary>设置 PcapDevice.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubPcapDevice.ToString01">
            <summary>设置 PcapDevice.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Description">
            <summary>设置 PcapDevice.get_Description() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Filter">
            <summary>设置 PcapDevice.get_Filter() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.LastError">
            <summary>设置 PcapDevice.get_LastError() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.LinkType">
            <summary>设置 PcapDevice.get_LinkType() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.MacAddress">
            <summary>设置 PcapDevice.get_MacAddress() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Name">
            <summary>设置 PcapDevice.get_Name() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Opened">
            <summary>设置 PcapDevice.get_Opened() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Started">
            <summary>设置 PcapDevice.get_Started() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubPcapDevice.Statistics">
            <summary>设置 PcapDevice.get_Statistics() 的 stub</summary>
        </member>
        <member name="T:SharpPcap.LibPcap.Fakes.StubSockaddr">
            <summary>SharpPcap.LibPcap.Sockaddr 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubSockaddr.#ctor(System.Net.NetworkInformation.PhysicalAddress)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubSockaddr.InitializeStub">
            <summary>初始化 type StubSockaddr 的新实例</summary>
        </member>
        <member name="M:SharpPcap.LibPcap.Fakes.StubSockaddr.ToString">
            <summary>设置 Sockaddr.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpPcap.LibPcap.Fakes.StubSockaddr.ToString01">
            <summary>设置 Sockaddr.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubSockaddr.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubSockaddr.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.LibPcap.Fakes.StubSockaddr.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication">
            <summary>SharpPcap.WinPcap.RemoteAuthentication 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.#ctor(SharpPcap.WinPcap.RemoteAuthentication)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.ConstructorAuthenticationTypesStringString">
            <summary>设置 RemoteAuthentication.RemoteAuthentication(AuthenticationTypes Type, String Username, String Password) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.GetUnmanaged">
            <summary>设置 RemoteAuthentication.GetUnmanaged() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.PasswordGet">
            <summary>设置 RemoteAuthentication.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.PasswordSetString">
            <summary>设置 RemoteAuthentication.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.TypeGet">
            <summary>设置 RemoteAuthentication.get_Type() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.TypeSetAuthenticationTypes">
            <summary>设置 RemoteAuthentication.set_Type(AuthenticationTypes value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.UsernameGet">
            <summary>设置 RemoteAuthentication.get_Username() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.UsernameSetString">
            <summary>设置 RemoteAuthentication.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.GetUnmanaged">
            <summary>设置 RemoteAuthentication.GetUnmanaged() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.PasswordGet">
            <summary>设置 RemoteAuthentication.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.PasswordSetString">
            <summary>设置 RemoteAuthentication.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.TypeGet">
            <summary>设置 RemoteAuthentication.get_Type() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.TypeSetAuthenticationTypes">
            <summary>设置 RemoteAuthentication.set_Type(AuthenticationTypes value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.UsernameGet">
            <summary>设置 RemoteAuthentication.get_Username() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimRemoteAuthentication.AllInstances.UsernameSetString">
            <summary>设置 RemoteAuthentication.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimSendQueue">
            <summary>SharpPcap.WinPcap.SendQueue 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimSendQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimSendQueue.#ctor(SharpPcap.WinPcap.SendQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimSendQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimSendQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AddByteArray">
            <summary>设置 SendQueue.Add(Byte[] packet) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AddByteArrayInt32Int32">
            <summary>设置 SendQueue.Add(Byte[] packet, Int32 seconds, Int32 microseconds) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AddByteArrayPcapHeader">
            <summary>设置 SendQueue.Add(Byte[] packet, PcapHeader pcapHdr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AddInternalByteArrayPcapHeader">
            <summary>设置 SendQueue.AddInternal(Byte[] packet, PcapHeader pcapHdr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AddRawCapture">
            <summary>设置 SendQueue.Add(RawCapture packet) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.ConstructorInt32">
            <summary>设置 SendQueue.SendQueue(Int32 memSize) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.CurrentLengthGet">
            <summary>设置 SendQueue.get_CurrentLength() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.Dispose">
            <summary>设置 SendQueue.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.TransmitWinPcapDeviceSendQueueTransmitModes">
            <summary>设置 SendQueue.Transmit(WinPcapDevice device, SendQueueTransmitModes transmitMode) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.AddByteArray">
            <summary>设置 SendQueue.Add(Byte[] packet) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.AddByteArrayInt32Int32">
            <summary>设置 SendQueue.Add(Byte[] packet, Int32 seconds, Int32 microseconds) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.AddByteArrayPcapHeader">
            <summary>设置 SendQueue.Add(Byte[] packet, PcapHeader pcapHdr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.AddInternalByteArrayPcapHeader">
            <summary>设置 SendQueue.AddInternal(Byte[] packet, PcapHeader pcapHdr) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.AddRawCapture">
            <summary>设置 SendQueue.Add(RawCapture packet) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.CurrentLengthGet">
            <summary>设置 SendQueue.get_CurrentLength() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.Dispose">
            <summary>设置 SendQueue.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimSendQueue.AllInstances.TransmitWinPcapDeviceSendQueueTransmitModes">
            <summary>设置 SendQueue.Transmit(WinPcapDevice device, SendQueueTransmitModes transmitMode) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs">
            <summary>SharpPcap.WinPcap.StatisticsModeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.#ctor(SharpPcap.WinPcap.StatisticsModeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.ConstructorRawCapturePcapDevice">
            <summary>设置 StatisticsModeEventArgs.StatisticsModeEventArgs(RawCapture packet, PcapDevice device) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.StatisticsGet">
            <summary>设置 StatisticsModeEventArgs.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModeEventArgs.AllInstances.StatisticsGet">
            <summary>设置 StatisticsModeEventArgs.get_Statistics() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket">
            <summary>SharpPcap.WinPcap.StatisticsModePacket 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.#ctor(SharpPcap.WinPcap.StatisticsModePacket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.ConstructorRawCapture">
            <summary>设置 StatisticsModePacket.StatisticsModePacket(RawCapture p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.RecievedBytesGet">
            <summary>设置 StatisticsModePacket.get_RecievedBytes() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.RecievedPacketsGet">
            <summary>设置 StatisticsModePacket.get_RecievedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.TimevalGet">
            <summary>设置 StatisticsModePacket.get_Timeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.TimevalSetPosixTimeval">
            <summary>设置 StatisticsModePacket.set_Timeval(PosixTimeval value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.AllInstances.RecievedBytesGet">
            <summary>设置 StatisticsModePacket.get_RecievedBytes() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.AllInstances.RecievedPacketsGet">
            <summary>设置 StatisticsModePacket.get_RecievedPackets() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.AllInstances.TimevalGet">
            <summary>设置 StatisticsModePacket.get_Timeval() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimStatisticsModePacket.AllInstances.TimevalSetPosixTimeval">
            <summary>设置 StatisticsModePacket.set_Timeval(PosixTimeval value) 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures">
            <summary>SharpPcap.WinPcap.UnmanagedStructures 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.#ctor(SharpPcap.WinPcap.UnmanagedStructures)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Constructor">
            <summary>设置 UnmanagedStructures.UnmanagedStructures() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth">
            <summary>SharpPcap.WinPcap.UnmanagedStructures+pcap_rmtauth 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimUnmanagedStructures.Shimpcap_rmtauth.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice">
            <summary>SharpPcap.WinPcap.WinPcapDevice 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.#ctor(SharpPcap.WinPcap.WinPcapDevice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.Bind(SharpPcap.ICaptureDevice)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.Close">
            <summary>设置 WinPcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.ConstructorPcapInterface">
            <summary>设置 WinPcapDevice.WinPcapDevice(PcapInterface pcapIf) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.KernelBufferSizeGet">
            <summary>设置 WinPcapDevice.get_KernelBufferSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.KernelBufferSizeSetUInt32">
            <summary>设置 WinPcapDevice.set_KernelBufferSize(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.MinToCopySetInt32">
            <summary>设置 WinPcapDevice.set_MinToCopy(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.ModeGet">
            <summary>设置 WinPcapDevice.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.ModeSetCaptureMode">
            <summary>设置 WinPcapDevice.set_Mode(CaptureMode value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.OnPcapStatisticsAddStatisticsModeEventHandler">
            <summary>设置 WinPcapDevice.add_OnPcapStatistics(StatisticsModeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.OnPcapStatisticsRemoveStatisticsModeEventHandler">
            <summary>设置 WinPcapDevice.remove_OnPcapStatistics(StatisticsModeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.Open">
            <summary>设置 WinPcapDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.OpenOpenFlagsInt32">
            <summary>设置 WinPcapDevice.Open(OpenFlags flags, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.OpenOpenFlagsInt32RemoteAuthentication">
            <summary>设置 WinPcapDevice.Open(OpenFlags flags, Int32 readTimeoutMilliseconds, RemoteAuthentication remoteAuthentication) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.SendPacketArrivalEventRawCapture">
            <summary>设置 WinPcapDevice.SendPacketArrivalEvent(RawCapture p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.SendQueueSendQueueSendQueueTransmitModes">
            <summary>设置 WinPcapDevice.SendQueue(SendQueue q, SendQueueTransmitModes transmitMode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.StartCapture">
            <summary>设置 WinPcapDevice.StartCapture() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.ThrowIfNotWinPcap">
            <summary>设置 WinPcapDevice.ThrowIfNotWinPcap() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.Close">
            <summary>设置 WinPcapDevice.Close() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.KernelBufferSizeGet">
            <summary>设置 WinPcapDevice.get_KernelBufferSize() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.KernelBufferSizeSetUInt32">
            <summary>设置 WinPcapDevice.set_KernelBufferSize(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.MinToCopySetInt32">
            <summary>设置 WinPcapDevice.set_MinToCopy(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.ModeGet">
            <summary>设置 WinPcapDevice.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.ModeSetCaptureMode">
            <summary>设置 WinPcapDevice.set_Mode(CaptureMode value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.OnPcapStatisticsAddStatisticsModeEventHandler">
            <summary>设置 WinPcapDevice.add_OnPcapStatistics(StatisticsModeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.OnPcapStatisticsRemoveStatisticsModeEventHandler">
            <summary>设置 WinPcapDevice.remove_OnPcapStatistics(StatisticsModeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.Open">
            <summary>设置 WinPcapDevice.Open() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.OpenOpenFlagsInt32">
            <summary>设置 WinPcapDevice.Open(OpenFlags flags, Int32 read_timeout) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.OpenOpenFlagsInt32RemoteAuthentication">
            <summary>设置 WinPcapDevice.Open(OpenFlags flags, Int32 readTimeoutMilliseconds, RemoteAuthentication remoteAuthentication) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.SendPacketArrivalEventRawCapture">
            <summary>设置 WinPcapDevice.SendPacketArrivalEvent(RawCapture p) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.SendQueueSendQueueSendQueueTransmitModes">
            <summary>设置 WinPcapDevice.SendQueue(SendQueue q, SendQueueTransmitModes transmitMode) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDevice.AllInstances.StartCapture">
            <summary>设置 WinPcapDevice.StartCapture() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList">
            <summary>SharpPcap.WinPcap.WinPcapDeviceList 的填充码类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.#ctor(SharpPcap.WinPcap.WinPcapDeviceList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.Generic.ICollection{SharpPcap.WinPcap.WinPcapDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.Generic.IEnumerable{SharpPcap.WinPcap.WinPcapDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Bind(System.Collections.Generic.IList{SharpPcap.WinPcap.WinPcapDevice})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Constructor">
            <summary>设置 WinPcapDeviceList.WinPcapDeviceList() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.DevicesIPAddressInt32RemoteAuthentication">
            <summary>设置 WinPcapDeviceList.Devices(IPAddress address, Int32 port, RemoteAuthentication remoteAuthentication) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.DevicesStringRemoteAuthentication">
            <summary>设置 WinPcapDeviceList.Devices(String rpcapString, RemoteAuthentication remoteAuthentication) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.GetDevices">
            <summary>设置 WinPcapDeviceList.GetDevices() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.InstanceGet">
            <summary>设置 WinPcapDeviceList.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.ItemGetString">
            <summary>设置 WinPcapDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.New">
            <summary>设置 WinPcapDeviceList.New() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.Refresh">
            <summary>设置 WinPcapDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.StaticConstructor">
            <summary>设置 WinPcapDeviceList.WinPcapDeviceList() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.AllInstances.ItemGetString">
            <summary>设置 WinPcapDeviceList.get_Item(String Name) 的 填充码</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.ShimWinPcapDeviceList.AllInstances.Refresh">
            <summary>设置 WinPcapDeviceList.Refresh() 的 填充码</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication">
            <summary>SharpPcap.WinPcap.RemoteAuthentication 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication.#ctor(SharpPcap.WinPcap.AuthenticationTypes,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication.InitializeStub">
            <summary>初始化 type StubRemoteAuthentication 的新实例</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubRemoteAuthentication.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.StubSendQueue">
            <summary>SharpPcap.WinPcap.SendQueue 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubSendQueue.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubSendQueue.InitializeStub">
            <summary>初始化 type StubSendQueue 的新实例</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubSendQueue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubSendQueue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubSendQueue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs">
            <summary>SharpPcap.WinPcap.StatisticsModeEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs.#ctor(SharpPcap.RawCapture,SharpPcap.LibPcap.PcapDevice)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs.InitializeStub">
            <summary>初始化 type StubStatisticsModeEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubStatisticsModeEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures">
            <summary>SharpPcap.WinPcap.UnmanagedStructures 的存根类型</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures.InitializeStub">
            <summary>初始化 type StubUnmanagedStructures 的新实例</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpPcap.WinPcap.Fakes.StubUnmanagedStructures.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
